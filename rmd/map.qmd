
```{r}
library(sf)
library(readr)
library(ggplot2)
library(stringr)
library(dplyr)
source(here::here("R/00_utils/colors.R"))
```

```{r}
calls <- readr::read_csv(here::here("data/raw/current_data.csv"))
bl <- sf::read_sf(here::here("data/geo/DEU_adm/DEU_adm1.shp"))

# aggregate by bundesland
calls_agg <- calls |> 
    # add filters and other logic (e.g. group-by's) here
    count(Bundesland) |> 
    mutate(Bundesland = str_replace_all(Bundesland, "ue", "ü")) |> # quick fix - ue -> u
    #  i feel this should be in the geodata if we look for newer ones 
    # for e xample here: https://github.com/isellsoap/deutschlandGeoJSON/tree/main/2_bundeslaender \
    # 
    mutate(BL_short =
             case_when( # use abbreviations for more handy layout
               Bundesland == "Baden-Württemberg" ~ "BW",
               Bundesland == "Bayern" ~ "BY",
               Bundesland == "Berlin" ~ "BE",
               Bundesland == "Brandenburg" ~ "BB",
               Bundesland == "Bremen" ~ "BR",
               Bundesland == "Hamburg" ~ "HH",
               Bundesland == "Hessen" ~ "HE",
               Bundesland == "Mecklenburg-Vorpommern" ~ "MV",
               Bundesland == "Niedersachsen" ~ "NI",
               Bundesland == "Nordrhein-Westfalen" ~ "NW",
               Bundesland == "Rheinland-Pfalz" ~ "RP",
               Bundesland == "Saarland" ~ "SL",
               Bundesland == "Sachsen" ~ "SN",
               Bundesland == "Sachsen-Anhalt" ~ "ST",
               Bundesland == "Schleswig-Holstein" ~ "SH",
               Bundesland == "Thüringen" ~ "TH"
             ))
# join together  with geo data
calls_agg <- calls_agg |> 
    dplyr::left_join(bl, by = c("Bundesland" = "NAME_1"))
```

```{r}

ggplot(sf::st_as_sf(calls_agg), aes(fill = n, label = paste(BL_short, scales::label_comma()(n), sep = "\n")))+
    geom_sf(show.legend = FALSE)+
    #geom_sf_label(aes(label = BL_short))+ # separate label gets messy
    geom_sf_label(size = 2, nudge_x = 0.3, nudge_y = -0.2, 
        alpha = .5,
        fill = "white",
        color = "black",           # text color
        label.size = 0.0,          # thickness of the label border
        label.r = unit(0.15, "lines"),  # border corner roundness
        label.padding = unit(0.25, "lines"))+ # internal padding around text+
    scale_fill_gradient(low = corporate_rose,
                    high = corporate_red,
                    breaks = scales::pretty_breaks(n = 4),
                    na.value="grey90")+
    theme_void()+
    theme()
```